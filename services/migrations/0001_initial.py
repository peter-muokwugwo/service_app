# Generated by Django 5.2 on 2025-05-06 19:52

import django.core.validators
import django.db.models.deletion
import services.help_functions
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Category Description')),
                ('feature_image', models.ImageField(blank=True, help_text='A representing image for this category.', null=True, upload_to='service_categories/', verbose_name='Category Image')),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Cart ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
            },
        ),
        migrations.CreateModel(
            name='InstallationServiceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('related_image', models.ImageField(blank=True, help_text='Image to the selected service model.', null=True, upload_to=services.help_functions.upload_to_service)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Service Price')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of services requested.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('moving_help_charge', models.DecimalField(blank=True, decimal_places=2, help_text='Additional charge for moving help.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Moving Help Charge')),
                ('needs_moving_help', models.BooleanField(default=False, help_text='Whether moving help is required.', verbose_name='Moving Help')),
                ('installation_type', models.CharField(choices=[('PLUMBING', 'Plumbing'), ('FITNESS', 'Fitness Equipment'), ('HOME_SECURITY', 'Home Security'), ('WALL_HANGING', 'Wall Hanging'), ('BABY_PROOF', 'Baby Proofing'), ('APPLIANCE', 'Appliance'), ('PLAYGROUND', 'Playground Equipment'), ('LIGHT_FIXTURE', 'Light Fixture')], max_length=20, verbose_name='Installation Type')),
                ('location', models.CharField(choices=[('INDOOR', 'Indoor'), ('OUTDOOR', 'Outdoor'), ('BOTH', 'Indoor and Outdoor')], default='INDOOR', max_length=20, verbose_name='Location')),
                ('power_nearby', models.CharField(choices=[('NO', 'No'), ('YES', 'Yes'), ('NOT_SURE', 'Not Sure')], default='NOT_SURE', max_length=20, verbose_name='Power Nearby')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_options', to='services.servicecategory', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Installation Service Option',
                'verbose_name_plural': 'Installation Service Options',
            },
        ),
        migrations.CreateModel(
            name='GazeboServiceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('related_image', models.ImageField(blank=True, help_text='Image to the selected service model.', null=True, upload_to=services.help_functions.upload_to_service)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Service Price')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of services requested.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('moving_help_charge', models.DecimalField(blank=True, decimal_places=2, help_text='Additional charge for moving help.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Moving Help Charge')),
                ('needs_moving_help', models.BooleanField(default=False, help_text='Whether moving help is required.', verbose_name='Moving Help')),
                ('action', models.CharField(choices=[('INSTALLATION', 'Installation'), ('UNINSTALLATION', 'Uninstallation'), ('REPLACEMENT', 'Replacement')], default='INSTALLATION', max_length=20)),
                ('gazebo_model', models.CharField(blank=True, choices=[('CEDAR', 'Cedar'), ('ALUMINIUM_DOUBLE_ROOF', 'Aluminium with Double Roof'), ('PATIO_DOUBLE_ROOF', 'Patio with Double Roof'), ('WOOD_PAVILION', 'Wood Pavilion'), ('GRAND', 'Grand'), ('MESSINA', 'Messina'), ('CAROLINA_PAVILION', 'Carolina Pavilion'), ('ALEXANDER_HARDTOP', 'Alexander Hardtop'), ('SANTA_MONICA', 'Santa Monica'), ('ARCHWOOD', 'Archwood'), ('CARDOVA', 'Cardova'), ('DOUBLE_ROOF_HARDTOP', 'Double Roof Hardtop'), ('SIENA_SCREEN_ROOM', 'Siena Screen Room'), ('APOLLO_ALUMINIUM', 'Apollo Aluminium'), ('ARLINGTON', 'Arlington'), ('CANOPY', 'Canopy')], max_length=50, null=True)),
                ('size', models.CharField(blank=True, choices=[('10X10', '10x10 ft'), ('12X12', '12x12 ft'), ('12X16', '12x16 ft'), ('12X20', '12x20 ft'), ('CUSTOM', 'Custom')], max_length=20, null=True)),
                ('anchoring', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], default='NO', max_length=3)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_options', to='services.servicecategory', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Gazebo Assembly Option',
                'verbose_name_plural': 'Gazebo Assembly Options',
            },
        ),
        migrations.CreateModel(
            name='FurnitureAssemblyOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('related_image', models.ImageField(blank=True, help_text='Image to the selected service model.', null=True, upload_to=services.help_functions.upload_to_service)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Service Price')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of services requested.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('moving_help_charge', models.DecimalField(blank=True, decimal_places=2, help_text='Additional charge for moving help.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Moving Help Charge')),
                ('needs_moving_help', models.BooleanField(default=False, help_text='Whether moving help is required.', verbose_name='Moving Help')),
                ('location', models.CharField(choices=[('INDOOR', 'Indoor'), ('OUTDOOR', 'Outdoor')], default='INDOOR', max_length=20, verbose_name='Location')),
                ('service_type', models.CharField(choices=[('ASSEMBLY', 'Assembly'), ('DISASSEMBLY', 'Disassembly'), ('BOTH', 'Assembly and Disassembly')], default='ASSEMBLY', max_length=20, verbose_name='Service Type')),
                ('assembly_type', models.CharField(choices=[('FLAT_PACK', 'Flat Pack'), ('PRE_ASSEMBLED', 'Pre-Assembled')], default='FLAT_PACK', max_length=20, verbose_name='Assembly Type')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_options', to='services.servicecategory', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Furniture Assembly Option',
                'verbose_name_plural': 'Furniture Assembly Options',
            },
        ),
        migrations.CreateModel(
            name='TVMountingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Service Description')),
                ('related_image', models.ImageField(blank=True, help_text='Image to the selected service model.', null=True, upload_to=services.help_functions.upload_to_service)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Service Price')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of services requested.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('moving_help_charge', models.DecimalField(blank=True, decimal_places=2, help_text='Additional charge for moving help.', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Moving Help Charge')),
                ('needs_moving_help', models.BooleanField(default=False, help_text='Whether moving help is required.', verbose_name='Moving Help')),
                ('needs', models.CharField(choices=[('MOUNTING', 'Mounting'), ('UNMOUNTING', 'Unmounting'), ('BOTH', 'Mounting and Unmounting')], default='MOUNTING', max_length=20, verbose_name='Needs')),
                ('bracket', models.CharField(choices=[('OWN', 'I have my own bracket'), ('FLAT', 'Flat bracket'), ('TILT', 'Tilt bracket'), ('FULL_MOTION', 'Full motion bracket')], default='OWN', max_length=20, verbose_name='Bracket')),
                ('bracket_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price if bracket is provided.', max_digits=10, null=True, verbose_name='Bracket Price')),
                ('wall_type', models.CharField(choices=[('DRY_WALL', 'Dry Wall'), ('CONCRETE', 'Concrete Wall'), ('STONE', 'Stone'), ('BRICKS', 'Bricks')], default='DRY_WALL', max_length=20, verbose_name='Wall Type')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_options', to='services.servicecategory', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'TV Mounting Option',
                'verbose_name_plural': 'TV Mounting Options',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='Object ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of this service option in the cart.', verbose_name='Quantity')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='services.cart', verbose_name='Cart')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
                'ordering': ['cart'],
                'unique_together': {('cart', 'content_type', 'object_id')},
            },
        ),
    ]
